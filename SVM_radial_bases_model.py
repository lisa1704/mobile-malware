import pandas as pd
from sklearn import svm
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import confusion_matrix, classification_report

filename = ("Obfuscated-MalMem2022.csv")
df = pd.read_csv(filename)

#Remove the category value because that tells so much about the label already
df.drop(columns = "Category", axis = 1, inplace=True)

#Check for null values
df.isnull().values.any()

#Use one hot encoder for the label
# Create the encoder:
encoder = LabelEncoder()
# Apply the encoder:
df['Label'] = encoder.fit_transform(df['Class'])
# Remove the original categorical feature
df.drop(columns = 'Class' ,axis=1, inplace=True)

y = df['Label']  #label
X = df.drop(columns = 'Label', axis=1) #features

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.20, random_state = 1234)
print("I'm here")
param_grid = {
    'C': [1,2,3],
    'gamma': [1,2,3]
}

grid_search = GridSearchCV(svm.SVC(), param_grid, cv=5)
grid_search.fit(X_train, y_train)

best_params = grid_search.best_params_
print("Best Hyperparameters with Highest Accuracy Score:", best_params)

best_model =  svm.SVC(kernel='rbf', **best_params)
best_model.fit(X_train, y_train)
print("Right here")
y_pred = best_model.predict(X_test)

# Compute the confusion matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(cm)

# Compute other metrics
print("Classification Report:")
print(classification_report(y_test, y_pred))


